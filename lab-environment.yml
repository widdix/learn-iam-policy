---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'learn-iam-policy: lab environment'
Parameters:
  Vpc:
    Description: 'Choose a VPC for the lab environment.'
    Type: 'AWS::EC2::VPC::Id'
  Subnet:
    Description: 'Choose a Subnet for the lab environment.'
    Type: 'AWS::EC2::Subnet::Id'
Mappings:
  RegionMap:
    'ap-south-2':
      AMI: 'ami-0fd07010d91ec94ed'
    'ap-south-1':
      AMI: 'ami-0501e3547293b2db3'
    'eu-south-1':
      AMI: 'ami-064e641df9c88db1a'
    'eu-south-2':
      AMI: 'ami-03e38c7ccbe876512'
    'me-central-1':
      AMI: 'ami-098c0ce6c458f300e'
    'il-central-1':
      AMI: 'ami-06c7a65b4ba37244d'
    'ca-central-1':
      AMI: 'ami-024076c81e3291472'
    'eu-central-1':
      AMI: 'ami-08b47394fb4c462b9'
    'eu-central-2':
      AMI: 'ami-046f9d0ba1e596fe8'
    'us-west-1':
      AMI: 'ami-04918638df2143901'
    'us-west-2':
      AMI: 'ami-05c89af705fc8fb3c'
    'af-south-1':
      AMI: 'ami-060b324aa32c23562'
    'eu-north-1':
      AMI: 'ami-04c9ea0e72cda507a'
    'eu-west-3':
      AMI: 'ami-090f3b471c0bb9c7f'
    'eu-west-2':
      AMI: 'ami-018302178b8f5d0a6'
    'eu-west-1':
      AMI: 'ami-05e9a7830635fe160'
    'ap-northeast-3':
      AMI: 'ami-0c3613ae50638f6c0'
    'ap-northeast-2':
      AMI: 'ami-0819c049403b5aa6b'
    'me-south-1':
      AMI: 'ami-0c710a975841e684b'
    'ap-northeast-1':
      AMI: 'ami-022c3cb73fbed1cc7'
    'sa-east-1':
      AMI: 'ami-037cb310a4cd89c1c'
    'ap-east-1':
      AMI: 'ami-09f4076013f7a5cad'
    'ca-west-1':
      AMI: 'ami-07ebbc212c45de49d'
    'ap-southeast-1':
      AMI: 'ami-03d7c57e0f49d78d2'
    'ap-southeast-2':
      AMI: 'ami-02d628788b362146a'
    'ap-southeast-3':
      AMI: 'ami-05754d6f8b26b908c'
    'ap-southeast-4':
      AMI: 'ami-049fc5d0791fd7ead'
    'us-east-1':
      AMI: 'ami-04c0f9ef2f505b609'
    'us-east-2':
      AMI: 'ami-0118c442c801c0d26'
Resources:
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'learn-iam-policy'
      VpcId: !Ref Vpc
  Ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', AMI]
      InstanceType: 't2.micro'
      IamInstanceProfile: !Ref IamInstanceProfile
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: '0'
        GroupSet: [!Ref SecurityGroup]
        SubnetId: !Ref Subnet
      Tags:
      - Key: Name
        Value: !Ref 'AWS::StackName'
  IamInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Roles:
      - !Ref IamRole
  IamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: 'DO-NOT-CHANGE-LAB-SSM-CONNECTION'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ssm:DescribeAssociation'
            - 'ssm:GetDeployablePatchSnapshotForInstance'
            - 'ssm:GetDocument'
            - 'ssm:GetManifest'
            - 'ssm:GetParameters'
            - 'ssm:ListAssociations'
            - 'ssm:ListInstanceAssociations'
            - 'ssm:PutInventory'
            - 'ssm:PutComplianceItems'
            - 'ssm:PutConfigurePackageResult'
            - 'ssm:UpdateAssociationStatus'
            - 'ssm:UpdateInstanceAssociationStatus'
            - 'ssm:UpdateInstanceInformation'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'ssmmessages:CreateControlChannel'
            - 'ssmmessages:CreateDataChannel'
            - 'ssmmessages:OpenControlChannel'
            - 'ssmmessages:OpenDataChannel'
            Resource: '*'
          - Effect: Allow
            Action:
            - 'ec2messages:AcknowledgeMessage'
            - 'ec2messages:DeleteMessage'
            - 'ec2messages:FailMessage'
            - 'ec2messages:GetEndpoint'
            - 'ec2messages:GetMessages'
            - 'ec2messages:SendReply'
            Resource: '*'
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'learn-iam-policy-${AWS::StackName}'
  SsmParameterPathAValue1:
    Type: 'AWS::SSM::Parameter'
    Properties: 
      Name: !Sub '/${AWS::StackName}/a/1'
      Value: 'a1'
      Type: 'String'
  SsmParameterPathAValue2:
    Type: 'AWS::SSM::Parameter'
    Properties: 
      Name: !Sub '/${AWS::StackName}/a/2'
      Value: 'a2'
      Type: 'String'
  SsmParameterPathBValue1:
    Type: 'AWS::SSM::Parameter'
    Properties: 
      Name: !Sub '/${AWS::StackName}/b/1'
      Value: 'b1'
      Type: 'String'
Outputs:
  InstanceId:
    Description: 'The EC2 instance ID.'
    Value: !Ref Ec2Instance
  IamRole:
    Description: 'The name of the IAM role attached to the EC2 instance.'
    Value: !Ref IamRole
  S3Bucket:
    Description: 'The name of the S3 bucket.'
    Value: !Ref S3Bucket
